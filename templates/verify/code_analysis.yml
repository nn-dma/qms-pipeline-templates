parameters:
  - name: stage_name
    type: string

  - name: dependsOn
    type: object

  - name: folder
    type: string

stages:
  - stage: ${{ parameters.stage_name }}
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - job: Snyk_security_Test
        steps:
          - checkout: self
          - script: |
              echo "Setting up Snyk API endpoint"
              npx snyk config set endpoint=https://api.eu.snyk.io
            displayName: Setup API Endpoint for Snyk
          - script: |
              if [ -z "$SNYK_SECRET" ] || [ -z "$SNYK_CLIENT_ID" ]; then
                echo "Error: SNYK_SECRET or SNYK_CLIENT_ID environment variable is not set."
                exit 1
              fi
              echo "Authenticating Snyk"
              npx snyk auth --auth-type=oauth --client-secret="$SNYK_SECRET" --client-id="$SNYK_CLIENT_ID"
              if [ $? -ne 0 ]; then
                echo "Error: Snyk authentication failed. Please check your credentials."
                exit 1
              fi
            displayName: Authenticate Snyk
            env:
              SNYK_SECRET: $(SNYK_SECRET)
              SNYK_CLIENT_ID: $(SNYK_CLIENT_ID)
          - script: |
              npm install snyk-to-html -g
            displayName: Install Snyk Tools
          - script: |
              echo "Current Directory"
              pwd
              echo "List of files"
              ls -all
              echo "Running Snyk Test"
              npx snyk code test
            displayName: Snyk Test
            continueOnError: true
          - script: |
              npx snyk code test --json | snyk-to-html -o results-code-$(Build.BuildNumber).html
            displayName: Snyk Report
            continueOnError: true
          - task: PublishBuildArtifacts@1
            displayName: Upload Code Scanning Result
            inputs:
              PathtoPublish: results-code-$(Build.BuildNumber).html
              ArtifactName: snyk-scanning-results
