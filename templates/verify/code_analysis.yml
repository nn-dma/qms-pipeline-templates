parameters:
  - name: stage_name
    type: string

  - name: dependsOn
    type: object

  - name: folder
    type: string

stages:
  - stage: ${{ parameters.stage_name }}
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - job: Check_against_compliance
        steps:
          - checkout: none

          - script: |
              echo "This step is currently not enabled."
              #cp -r /mnt/cache/$(Build.Repository.Name)_cache/$(Build.BuildId)/cdk.out .
            displayName: Restore caches
            workingDirectory: $(System.DefaultWorkingDirectory)

          - script: |
              pwd
              ls
            displayName: Run CFN-GUARD
      - job: Snyk_security_Test
        steps:
          - uses: actions/checkout@v4
          - name: Setup API Endpoint for Snyk
            shell: bash
            env:
              SNYK_API: "https://api.eu.snyk.io"
            run: npx snyk config set endpoint=$SNYK_API
          - name: Authenticate Snyk
            shell: bash
            env:
              SNYK_SECRET: ${{ inputs.SNYK_SECRET }}
              SNYK_CLIENT_ID: ${{ inputs.SNYK_CLIENT_ID }}
            run: npx snyk auth --auth-type=oauth --client-secret=$SNYK_SECRET --client-id=$SNYK_CLIENT_ID
          - name: Install Snyk Tools
            shell: bash
            run: npm install snyk-to-html -g
          - uses: snyk/actions/setup@master
          - name: Snyk Test
            shell: bash
            run: snyk code test
            continue-on-error: true # To make sure that SARIF upload gets called
          - name: Snyk Report
            shell: bash
            run: snyk code test --json | snyk-to-html -o results-code-${{ inputs.PIPELINE_RUN }}.html
            continue-on-error: true # To make sure that SARIF upload gets called
          - name: Upload Code Scanning Result
            uses: actions/upload-artifact@v4
            with:
              name: snyk-scanning-results
              path: results-code-${{ inputs.PIPELINE_RUN }}.html